-- =====================================================
-- üîç VERIFICAR ESTADO ACTUAL Y DECIDIR QU√â HACER
-- Ejecuta este script primero para saber c√≥mo proceder
-- =====================================================

-- 1. ¬øQu√© tablas de clientes existen?
SELECT
    CASE
        WHEN EXISTS (SELECT FROM pg_tables WHERE tablename = 'clientes' AND schemaname = 'public')
        THEN '‚úÖ Tabla clientes existe'
        ELSE '‚ùå Tabla clientes NO existe'
    END as tabla_clientes,
    CASE
        WHEN EXISTS (SELECT FROM pg_tables WHERE tablename = 'clientes_old' AND schemaname = 'public')
        THEN '‚úÖ Tabla clientes_old existe'
        ELSE '‚ùå Tabla clientes_old NO existe'
    END as tabla_clientes_old;

-- 2. Si existe 'clientes', ¬øqu√© estructura tiene?
SELECT
    CASE
        WHEN EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'clientes' AND column_name = 'nombres')
        THEN '‚úÖ ESTRUCTURA NUEVA (nombres, apellidos, estado, origen)'
        WHEN EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'clientes' AND column_name = 'nombre')
        THEN '‚ö†Ô∏è  ESTRUCTURA ANTIGUA (nombre, apellido, documento_tipo)'
        ELSE '‚ùå No existe tabla clientes'
    END as estructura_clientes;

-- 3. Contar registros (de forma segura)
SELECT
    COALESCE((SELECT COUNT(*) FROM clientes), 0) as registros_en_clientes,
    COALESCE((SELECT COUNT(*) FROM clientes_old WHERE EXISTS (SELECT FROM pg_tables WHERE tablename = 'clientes_old')), 0) as registros_en_clientes_old;

-- 4. Ver columnas actuales de tabla clientes
SELECT
    column_name,
    data_type,
    is_nullable
FROM information_schema.columns
WHERE table_name = 'clientes'
AND table_schema = 'public'
ORDER BY ordinal_position;

-- =====================================================
-- üìã INTERPRETACI√ìN Y ACCI√ìN RECOMENDADA:
-- =====================================================

-- CASO 1: ‚úÖ clientes existe CON estructura NUEVA (tiene 'nombres')
-- ‚Üí ACCI√ìN: ¬°Ya est√° migrado! Ejecuta Paso 2 (negociaciones-schema.sql)
-- ‚Üí Si existe clientes_old, elim√≠nala: DROP TABLE clientes_old CASCADE;

-- CASO 2: ‚ö†Ô∏è clientes existe CON estructura ANTIGUA (tiene 'nombre')
-- ‚Üí ACCI√ìN: Ejecuta migracion-clientes-segura.sql

-- CASO 3: ‚ùå clientes NO existe pero clientes_old S√ç
-- ‚Üí ACCI√ìN: Ejecuta migracion-clientes-segura.sql

-- CASO 4: ‚ùå Ninguna tabla existe
-- ‚Üí ACCI√ìN: Ejecuta schema.sql primero para crear estructura base

-- =====================================================
-- üéØ SCRIPT DE SOLUCI√ìN R√ÅPIDA (copia seg√∫n tu caso)
-- =====================================================

-- SOLUCI√ìN A: Si clientes tiene estructura nueva pero existe clientes_old
-- DROP TABLE IF EXISTS clientes_old CASCADE;

-- SOLUCI√ìN B: Si clientes tiene estructura antigua
-- ALTER TABLE clientes RENAME TO clientes_old;
-- Luego ejecuta migracion-clientes-segura.sql

-- SOLUCI√ìN C: Si no existe ninguna tabla
-- Ejecuta primero: schema.sql
-- Luego ejecuta: migracion-clientes-segura.sql

-- SOLUCI√ìN D: Empezar de cero (CUIDADO: elimina todo)
-- DROP TABLE IF EXISTS clientes CASCADE;
-- DROP TABLE IF EXISTS clientes_old CASCADE;
-- Luego ejecuta: migracion-clientes-segura.sql
